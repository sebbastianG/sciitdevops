name: Terraform Apply on AWS

on:
  push:
    branches:
      - feature/aws-s3-module

env:
  AWS_REGION: eu-west-1

jobs:
  deploy-aws:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # OPTIONAL: Create Terraform state bucket if needed
      - name: Create S3 Bucket for State (optional)
        run: |
          cd terraform/terraform-modules/state-bucket
          terraform init
          terraform apply -auto-approve || echo "Bucket exists"

      # Init backend config
      - name: Init Terraform with S3 Backend
        run: |
          cd terraform/terraform-modules/tf-ec2-module
          terraform init \
            -backend-config="bucket=terraform-state-unique-bucket-name" \
            -backend-config="key=feature/aws-s3-module/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      # Terraform Apply
      - name: Apply Infrastructure
        run: |
          cd terraform/terraform-modules/tf-ec2-module
          terraform apply -auto-approve \
            -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
            -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
            -var="aws_default_region=${{ env.AWS_REGION }}" \
            -var="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
            -var="vm_admin_username=${{ secrets.VM_ADMIN_USERNAME }}" \
            -var="vm_admin_password=${{ secrets.VM_ADMIN_PASSWORD }}"

      - name: Refresh State (Optional)
        run: |
          cd terraform/terraform-modules/tf-ec2-module
          terraform refresh

      - name: Capture Outputs
        id: tf_outputs
        run: |
          cd terraform/terraform-modules/tf-ec2-module
          echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_ENV

      - name: Destroy Infra (Optional)
        run: |
          cd terraform/terraform-modules/tf-ec2-module
          terraform destroy -auto-approve
