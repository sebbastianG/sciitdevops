name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      destroy_aws:
        description: 'Destroy AWS infrastructure?'
        required: true
        default: 'false'
      destroy_azure:
        description: 'Destroy Azure infrastructure?'
        required: true
        default: 'false'

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    ######################################
    # Destroy AWS
    ######################################
    - name: Terraform Destroy AWS
      if: ${{ github.event.inputs.destroy_aws == 'true' }}
      run: |
        terraform -chdir=terraform/aws init
        terraform -chdir=terraform/aws destroy -auto-approve \
          -var="aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_default_region=${{ secrets.AWS_DEFAULT_REGION }}" \
          -var="vm_admin_username=${{ secrets.VM_ADMIN_USERNAME }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    ######################################
    # Destroy Azure
    ######################################
    - name: Terraform Destroy Azure
      if: ${{ github.event.inputs.destroy_azure == 'true' }}
      run: |
        terraform -chdir=terraform/azure init
        terraform -chdir=terraform/azure destroy -auto-approve \
          -var="azure_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="azure_client_id=${{ secrets.AZURE_CLIENT_ID }}" \
          -var="azure_client_secret=${{ secrets.AZURE_CLIENT_SECRET }}" \
          -var="azure_tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
          -var="resource_group_location=${{ secrets.RESOURCE_GROUP_LOCATION }}" \
          -var="vm_admin_username=${{ secrets.VM_ADMIN_USERNAME }}" \
          -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}"
      env:
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
